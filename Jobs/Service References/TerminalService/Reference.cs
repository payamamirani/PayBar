//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jobs.TerminalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TxnResult", Namespace="http://schemas.datacontract.org/2004/07/I2S.PayService")]
    [System.SerializableAttribute()]
    public partial class TxnResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddData1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddData2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddData3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RRNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RefNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ResponseCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TraceNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddData1 {
            get {
                return this.AddData1Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddData1Field, value) != true)) {
                    this.AddData1Field = value;
                    this.RaisePropertyChanged("AddData1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddData2 {
            get {
                return this.AddData2Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddData2Field, value) != true)) {
                    this.AddData2Field = value;
                    this.RaisePropertyChanged("AddData2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddData3 {
            get {
                return this.AddData3Field;
            }
            set {
                if ((object.ReferenceEquals(this.AddData3Field, value) != true)) {
                    this.AddData3Field = value;
                    this.RaisePropertyChanged("AddData3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountField, value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RRN {
            get {
                return this.RRNField;
            }
            set {
                if ((object.ReferenceEquals(this.RRNField, value) != true)) {
                    this.RRNField = value;
                    this.RaisePropertyChanged("RRN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RefNum {
            get {
                return this.RefNumField;
            }
            set {
                if ((object.ReferenceEquals(this.RefNumField, value) != true)) {
                    this.RefNumField = value;
                    this.RaisePropertyChanged("RefNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ResponseCode {
            get {
                return this.ResponseCodeField;
            }
            set {
                if ((this.ResponseCodeField.Equals(value) != true)) {
                    this.ResponseCodeField = value;
                    this.RaisePropertyChanged("ResponseCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TraceNo {
            get {
                return this.TraceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.TraceNoField, value) != true)) {
                    this.TraceNoField = value;
                    this.RaisePropertyChanged("TraceNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TerminalService.ITerminalService")]
    public interface ITerminalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/PayBill", ReplyAction="http://tempuri.org/ITerminalService/PayBillResponse")]
        Jobs.TerminalService.TxnResult PayBill(string User, string Pass, int TermID, int posCondition, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/PayBill", ReplyAction="http://tempuri.org/ITerminalService/PayBillResponse")]
        System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> PayBillAsync(string User, string Pass, int TermID, int posCondition, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/InstallmentBill", ReplyAction="http://tempuri.org/ITerminalService/InstallmentBillResponse")]
        Jobs.TerminalService.TxnResult InstallmentBill(string User, string Pass, int TermID, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/InstallmentBill", ReplyAction="http://tempuri.org/ITerminalService/InstallmentBillResponse")]
        System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> InstallmentBillAsync(string User, string Pass, int TermID, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/UDBill", ReplyAction="http://tempuri.org/ITerminalService/UDBillResponse")]
        Jobs.TerminalService.TxnResult UDBill(string User, string Pass, int TermID, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/UDBill", ReplyAction="http://tempuri.org/ITerminalService/UDBillResponse")]
        System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> UDBillAsync(string User, string Pass, int TermID, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/BuyCharge", ReplyAction="http://tempuri.org/ITerminalService/BuyChargeResponse")]
        Jobs.TerminalService.TxnResult BuyCharge(string User, string Pass, int TermID, int posCondition, string Company, long PriceID, long ResNum, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/BuyCharge", ReplyAction="http://tempuri.org/ITerminalService/BuyChargeResponse")]
        System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> BuyChargeAsync(string User, string Pass, int TermID, int posCondition, string Company, long PriceID, long ResNum, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/Topup", ReplyAction="http://tempuri.org/ITerminalService/TopupResponse")]
        Jobs.TerminalService.TxnResult Topup(string User, string Pass, int TermID, int posCondition, string Company, string ChargeType, string CellNo, long Amount, long ResNum, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/Topup", ReplyAction="http://tempuri.org/ITerminalService/TopupResponse")]
        System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> TopupAsync(string User, string Pass, int TermID, int posCondition, string Company, string ChargeType, string CellNo, long Amount, long ResNum, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/Purchase", ReplyAction="http://tempuri.org/ITerminalService/PurchaseResponse")]
        Jobs.TerminalService.TxnResult Purchase(string User, string Pass, int TermID, int posCondition, long Amount, string ResNum, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/Purchase", ReplyAction="http://tempuri.org/ITerminalService/PurchaseResponse")]
        System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> PurchaseAsync(string User, string Pass, int TermID, int posCondition, long Amount, string ResNum, string Pan, string Pin, string CVV, string ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/GetBillStatus", ReplyAction="http://tempuri.org/ITerminalService/GetBillStatusResponse")]
        Jobs.TerminalService.TxnResult GetBillStatus(string User, string Pass, string BillID, string PayID, int TermID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/GetBillStatus", ReplyAction="http://tempuri.org/ITerminalService/GetBillStatusResponse")]
        System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> GetBillStatusAsync(string User, string Pass, string BillID, string PayID, int TermID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/ConfirmTxn", ReplyAction="http://tempuri.org/ITerminalService/ConfirmTxnResponse")]
        int ConfirmTxn(string AppUser, string AppPassword, long TerminalNumber, long Amount, string RefNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/ConfirmTxn", ReplyAction="http://tempuri.org/ITerminalService/ConfirmTxnResponse")]
        System.Threading.Tasks.Task<int> ConfirmTxnAsync(string AppUser, string AppPassword, long TerminalNumber, long Amount, string RefNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/ReverseTxn", ReplyAction="http://tempuri.org/ITerminalService/ReverseTxnResponse")]
        int ReverseTxn(string AppUser, string AppPassword, long TerminalNumber, long Amount, string RefNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITerminalService/ReverseTxn", ReplyAction="http://tempuri.org/ITerminalService/ReverseTxnResponse")]
        System.Threading.Tasks.Task<int> ReverseTxnAsync(string AppUser, string AppPassword, long TerminalNumber, long Amount, string RefNum);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITerminalServiceChannel : Jobs.TerminalService.ITerminalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TerminalServiceClient : System.ServiceModel.ClientBase<Jobs.TerminalService.ITerminalService>, Jobs.TerminalService.ITerminalService {
        
        public TerminalServiceClient() {
        }
        
        public TerminalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TerminalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TerminalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TerminalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Jobs.TerminalService.TxnResult PayBill(string User, string Pass, int TermID, int posCondition, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.PayBill(User, Pass, TermID, posCondition, BillID, PayID, Pan, Pin, CVV, ExpDate);
        }
        
        public System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> PayBillAsync(string User, string Pass, int TermID, int posCondition, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.PayBillAsync(User, Pass, TermID, posCondition, BillID, PayID, Pan, Pin, CVV, ExpDate);
        }
        
        public Jobs.TerminalService.TxnResult InstallmentBill(string User, string Pass, int TermID, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.InstallmentBill(User, Pass, TermID, BillID, PayID, Pan, Pin, CVV, ExpDate);
        }
        
        public System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> InstallmentBillAsync(string User, string Pass, int TermID, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.InstallmentBillAsync(User, Pass, TermID, BillID, PayID, Pan, Pin, CVV, ExpDate);
        }
        
        public Jobs.TerminalService.TxnResult UDBill(string User, string Pass, int TermID, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.UDBill(User, Pass, TermID, BillID, PayID, Pan, Pin, CVV, ExpDate);
        }
        
        public System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> UDBillAsync(string User, string Pass, int TermID, string BillID, string PayID, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.UDBillAsync(User, Pass, TermID, BillID, PayID, Pan, Pin, CVV, ExpDate);
        }
        
        public Jobs.TerminalService.TxnResult BuyCharge(string User, string Pass, int TermID, int posCondition, string Company, long PriceID, long ResNum, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.BuyCharge(User, Pass, TermID, posCondition, Company, PriceID, ResNum, Pan, Pin, CVV, ExpDate);
        }
        
        public System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> BuyChargeAsync(string User, string Pass, int TermID, int posCondition, string Company, long PriceID, long ResNum, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.BuyChargeAsync(User, Pass, TermID, posCondition, Company, PriceID, ResNum, Pan, Pin, CVV, ExpDate);
        }
        
        public Jobs.TerminalService.TxnResult Topup(string User, string Pass, int TermID, int posCondition, string Company, string ChargeType, string CellNo, long Amount, long ResNum, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.Topup(User, Pass, TermID, posCondition, Company, ChargeType, CellNo, Amount, ResNum, Pan, Pin, CVV, ExpDate);
        }
        
        public System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> TopupAsync(string User, string Pass, int TermID, int posCondition, string Company, string ChargeType, string CellNo, long Amount, long ResNum, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.TopupAsync(User, Pass, TermID, posCondition, Company, ChargeType, CellNo, Amount, ResNum, Pan, Pin, CVV, ExpDate);
        }
        
        public Jobs.TerminalService.TxnResult Purchase(string User, string Pass, int TermID, int posCondition, long Amount, string ResNum, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.Purchase(User, Pass, TermID, posCondition, Amount, ResNum, Pan, Pin, CVV, ExpDate);
        }
        
        public System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> PurchaseAsync(string User, string Pass, int TermID, int posCondition, long Amount, string ResNum, string Pan, string Pin, string CVV, string ExpDate) {
            return base.Channel.PurchaseAsync(User, Pass, TermID, posCondition, Amount, ResNum, Pan, Pin, CVV, ExpDate);
        }
        
        public Jobs.TerminalService.TxnResult GetBillStatus(string User, string Pass, string BillID, string PayID, int TermID) {
            return base.Channel.GetBillStatus(User, Pass, BillID, PayID, TermID);
        }
        
        public System.Threading.Tasks.Task<Jobs.TerminalService.TxnResult> GetBillStatusAsync(string User, string Pass, string BillID, string PayID, int TermID) {
            return base.Channel.GetBillStatusAsync(User, Pass, BillID, PayID, TermID);
        }
        
        public int ConfirmTxn(string AppUser, string AppPassword, long TerminalNumber, long Amount, string RefNum) {
            return base.Channel.ConfirmTxn(AppUser, AppPassword, TerminalNumber, Amount, RefNum);
        }
        
        public System.Threading.Tasks.Task<int> ConfirmTxnAsync(string AppUser, string AppPassword, long TerminalNumber, long Amount, string RefNum) {
            return base.Channel.ConfirmTxnAsync(AppUser, AppPassword, TerminalNumber, Amount, RefNum);
        }
        
        public int ReverseTxn(string AppUser, string AppPassword, long TerminalNumber, long Amount, string RefNum) {
            return base.Channel.ReverseTxn(AppUser, AppPassword, TerminalNumber, Amount, RefNum);
        }
        
        public System.Threading.Tasks.Task<int> ReverseTxnAsync(string AppUser, string AppPassword, long TerminalNumber, long Amount, string RefNum) {
            return base.Channel.ReverseTxnAsync(AppUser, AppPassword, TerminalNumber, Amount, RefNum);
        }
    }
}
